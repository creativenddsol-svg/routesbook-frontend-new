// src/pages/SearchResults/Mobile.jsx
import { useRef } from "react";
import { useNavigate } from "react-router-dom";
import { motion, AnimatePresence } from "framer-motion";
import {
Â  FaBus,
Â  FaClock,
Â  FaChevronLeft,
Â  FaSlidersH,
Â  FaPen,
Â  // FaStar, // Removed FaStar
} from "react-icons/fa";
import { TbSunrise, TbSun, TbSunset, TbMoon } from "react-icons/tb";

import {
Â  // shared context + helpers from _core (contract listed below)
Â  useSearchCore,
Â  PALETTE,
Â  calculateDuration,
Â  getDisplayPrice,
Â  getReadableDate,
Â  TIME_SLOTS, // âœ… import TIME_SLOTS for chips
} from "./_core";

// mobile-only leaf components
import BookingDeadlineTimer from "./components/BookingDeadlineTimer";
import FilterPanel from "./components/FilterPanel";
import SpecialNoticesSection from "./components/SpecialNoticesSection";
import MobileBottomSheet from "./components/MobileBottomSheet";
import MobileSearchSheet from "./components/MobileSearchSheet";
import MobileCityPicker from "./components/MobileCityPicker";
import MobileCalendarSheet from "./components/MobileCalendarSheet";

// â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
// Local tiny skeleton used during loading
const BusCardSkeleton = () => (
Â  <div className="bg-white rounded-xl p-4 animate-pulse border border-gray-200 shadow-sm mb-3">
Â  Â  <div className="flex justify-between">
Â  Â  Â  <div className="w-2/3">
Â  Â  Â  Â  <div className="h-5 w-24 bg-gray-200 rounded mb-2" />
Â  Â  Â  Â  <div className="h-4 w-40 bg-gray-200 rounded" />
Â  Â  Â  </div>
Â  Â  Â  <div className="h-8 w-20 bg-gray-200 rounded" />
Â  Â  </div>
Â  Â  <div className="h-10 w-full bg-gray-100 rounded mt-3" />
Â  </div>
);

// simple fade/slide
const listVariants = { hidden: { opacity: 0 }, visible: { opacity: 1 } };
const itemVariants = { hidden: { y: 16, opacity: 0 }, visible: { y: 0, opacity: 1 } };

// minimal icon per time slot (redbus-like)
const slotIcon = (slot) => {
Â  if (/morning/i.test(slot)) return TbSunrise;
Â  if (/afternoon/i.test(slot)) return TbSun;
Â  if (/evening/i.test(slot)) return TbSunset;
Â  if (/night/i.test(slot)) return TbMoon;
Â  return TbSun;
};


// --------------------------------------------------------------------------------------
// ðŸš¨ NEW SHIMMER STYLES: This CSS is injected to create the shine effect.
// --------------------------------------------------------------------------------------
const shimmerStyles = `
Â  @keyframes shimmer {
Â  Â  0% { background-position: -200% 0; }
Â  Â  100% { background-position: 200% 0; }
Â  }

Â  .shimmer-effect {
Â  Â  position: relative;
Â  Â  overflow: hidden;
Â  Â  background-color: #FFF7ED; /* Base background color */
Â  }

Â  .shimmer-effect::after {
Â  Â  content: '';
Â  Â  position: absolute;
Â  Â  top: 0;
Â  Â  left: 0;
Â  Â  right: 0;
Â  Â  bottom: 0;
Â  Â  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4) 30%, transparent 60%);
Â  Â  transform: translateX(-100%);
Â  Â  animation: shimmer 1.5s infinite linear;
Â  Â  animation-delay: 0.5s; /* Delay to make it look like it's part of a loop */
Â  }
`;
// --------------------------------------------------------------------------------------


export default function Mobile() {
Â  const nav = useNavigate();
Â  const {
Â  Â  from,
Â  Â  to,
Â  Â  searchDate,
Â  Â  setSearchDate,
Â  Â  searchDateParam,
Â  Â  todayStr,
Â  Â  loading,
Â  Â  fetchError,
Â  Â  // sortedBuses, // not used directly in renderCards
Â  Â  visibleBuses,
Â  Â  availability,

Â  Â  // card open/close
Â  Â  // expandedBusId, // not used in Mobile card render
Â  Â  handleToggleSeatLayout,

Â  Â  // filters + sort
Â  Â  isFilterOpen,
Â  Â  setIsFilterOpen,
Â  Â  activeFilterCount,
Â  Â  sortBy,
Â  Â  setSortBy,
Â  Â  filters,
Â  Â  setFilters,

Â  Â  // pickers/sheets
Â  Â  // mobileSearchOpen, // not used directly, only setter
Â  Â  setMobileSearchOpen,
Â  Â  mobilePickerOpen,
Â  Â  setMobilePickerOpen,
Â  Â  mobilePickerMode,
Â  Â  setMobilePickerMode,
Â  Â  calOpen,
Â  Â  setCalOpen,

Â  Â  fromOptions,
Â  Â  toOptions,
Â  Â  recent,

Â  Â  // navigation search update
Â  Â  updateSearchWithDate,
Â  Â  fetchData,
Â  Â  handleMobilePick,
Â  } = useSearchCore();

Â  // hidden native <input type="date"> for the header chip quick change
Â  const mobileDateInputRef = useRef(null);
Â  // const openDateNative = () => mobileDateInputRef.current?.showPicker(); // Removed as we use the calendar sheet
Â  const onNativeDateChange = (e) => {
Â  Â  const d = e.target.value;
Â  Â  setSearchDate(d);
Â  Â  updateSearchWithDate(d);
Â  };

Â  const activeIsSoldOut = (busKey) => {
Â  Â  const a = availability?.[busKey];
Â  Â  return typeof a?.available === "number" && a.available === 0;
Â  };

Â  // --------------------------------------------------------------------------------------
Â  // RENDER CARDS (UPDATED UI)
Â  // --------------------------------------------------------------------------------------
Â  const renderCards = () => {
Â  Â  if (loading) {
Â  Â  Â  return Array.from({ length: 5 }).map((_, i) => <BusCardSkeleton key={i} />);
Â  Â  }
Â  Â  if (fetchError) {
Â  Â  Â  return (
Â  Â  Â  Â  <div className="text-center p-8 bg-white rounded-2xl border border-gray-200">
Â  Â  Â  Â  Â  <div className="text-lg font-semibold mb-1" style={{ color: PALETTE.textDark }}>
Â  Â  Â  Â  Â  Â  Oops! Something went wrong.
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div className="text-sm mb-4" style={{ color: PALETTE.textLight }}>
Â  Â  Â  Â  Â  Â  {fetchError}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={fetchData}
Â  Â  Â  Â  Â  Â  className="px-4 py-2 rounded-lg text-white font-semibold"
Â  Â  Â  Â  Â  Â  style={{ backgroundColor: PALETTE.accentBlue }}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Try again
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
Â  Â  Â  );
Â  Â  }
Â  Â  if (!visibleBuses.length) {
Â  Â  Â  return (
Â  Â  Â  Â  <div className="text-center p-8 bg-white rounded-2xl border border-gray-200">
Â  Â  Â  Â  Â  <div className="text-lg font-semibold mb-1" style={{ color: PALETTE.textDark }}>
Â  Â  Â  Â  Â  Â  {activeFilterCount ? "No Buses Match Your Filters" : "No Buses Available"}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div className="text-sm" style={{ color: PALETTE.textLight }}>
Â  Â  Â  Â  Â  Â  {activeFilterCount
Â  Â  Â  Â  Â  Â  Â  ? "Try adjusting or resetting your filters."
Â  Â  Â  Â  Â  Â  Â  : "No buses were found for this route on the selected date."}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  );
Â  Â  }

Â  Â  return (
Â  Â  Â  <motion.divÂ 
Â  Â  Â  Â  variants={listVariants}Â 
Â  Â  Â  Â  initial="hidden"Â 
Â  Â  Â  Â  animate="visible"
Â  Â  Â  Â  className="space-y-3"
Â  Â  Â  >
Â  Â  Â  Â  {visibleBuses.map((bus) => {
Â  Â  Â  Â  Â  const busKey = `${bus._id}-${bus.departureTime}`;
Â  Â  Â  Â  Â  const displayPrice = getDisplayPrice(bus, from, to);

Â  Â  Â  Â  Â  let timerProps = null;
Â  Â  Â  Â  Â  if (searchDateParam && bus.departureTime) {
Â  Â  Â  Â  Â  Â  const now = new Date();
Â  Â  Â  Â  Â  Â  const [depH, depM] = bus.departureTime.split(":").map(Number);
Â  Â  Â  Â  Â  Â  // searchDateParam is YYYY-MM-DD
Â  Â  Â  Â  Â  Â  const [yy, mm, dd] = searchDateParam.split("-").map(Number);
Â  Â  Â  Â  Â  Â  // Date constructor: year, monthIndex (0-11), day, hour, minute
Â  Â  Â  Â  Â  Â  const dep = new Date(yy, mm - 1, dd, depH, depM).getTime();
Â  Â  Â  Â  Â  Â  const diffHrs = (dep - now.getTime()) / (1000 * 60 * 60);
Â  Â  Â  Â  Â  Â  // Show timer if departure is within the next 12 hours
Â  Â  Â  Â  Â  Â  if (diffHrs > 0 && diffHrs <= 12) {
Â  Â  Â  Â  Â  Â  Â  // Set deadline 1 hour before departure
Â  Â  Â  Â  Â  Â  Â  timerProps = {
Â  Â  Â  Â  Â  Â  Â  Â  deadlineTimestamp: dep - 60 * 60 * 1000,
Â  Â  Â  Â  Â  Â  Â  Â  departureTimestamp: dep,
Â  Â  Â  Â  Â  Â  Â  Â  onDeadline: fetchData, // Refresh data on deadline
Â  Â  Â  Â  Â  Â  Â  };
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  }

Â  Â  Â  Â  Â  const a = availability?.[busKey];
Â  Â  Â  Â  Â  const availableSeats = a?.available;
Â  Â  Â  Â  Â  const isSoldOut = activeIsSoldOut(busKey);
Â  Â  Â  Â  Â  const hasStrike =
Â  Â  Â  Â  Â  Â  typeof bus.originalPrice === "number" && bus.originalPrice > displayPrice;

Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  key={busKey}
Â  Â  Â  Â  Â  Â  Â  variants={itemVariants}
Â  Â  Â  Â  Â  Â  Â  className={`bg-white rounded-xl border border-gray-200 overflow-hidden shadow-sm ${
Â  Â  Â  Â  Â  Â  Â  Â  isSoldOut ? "opacity-60" : "hover:shadow-md"
Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full text-left p-4 ${isSoldOut ? "cursor-not-allowed" : ""}`}
Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => !isSoldOut && handleToggleSeatLayout(bus)}
Â  Â  Â  Â  Â  Â  Â  Â  disabled={isSoldOut} // Disable the whole card if sold out
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  {/* START: Card Content - FINAL UI with Shimmer */}
Â  Â  Â  Â  Â  Â  Â  Â Â 
Â  Â  Â  Â  Â  Â  Â  Â  {/* 1. Bus Operator & Type Group (Top Left) */}
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-start justify-between">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="min-w-0 pr-3 flex-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Operator Name */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-sm font-semibold text-gray-900 truncate mb-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {bus.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Bus Type and Seat Count Pills (Aligned on second line) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â {/* Bus Type in Light Gray Pill - Non-Bold, Black Text */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <spanÂ 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="inline-flex items-center text-xs font-medium px-2 py-0.5 rounded-full"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  color: '#1F2937', // Gray 900 (Black)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  backgroundColor: '#F3F4F6', // Gray 100
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {bus.busType}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Seat Count Down Pill - Non-Bold, Black Text */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {typeof availableSeats === "number" && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="inline-flex items-center text-xs font-medium px-2 py-0.5 rounded-full"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  color: '#1F2937', // Gray 900 (Black)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  backgroundColor: '#F3F4F6', // Gray 100
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {availableSeats} Seats
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Operator Logo/Placeholder (Top Right) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="w-10 h-10 flex-shrink-0 flex items-center justify-center rounded-full bg-gray-100">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {bus.operatorLogo ? (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  src={bus.operatorLogo}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alt={`${bus.name} logo`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="max-w-full max-h-full object-contain rounded-full"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <FaBus className="text-lg text-gray-400" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  {/* --- Divider for Main Info Section --- */}
Â  Â  Â  Â  Â  Â  Â  Â  <hr className="my-3 border-gray-100" />

Â  Â  Â  Â  Â  Â  Â  Â  {/* 2. Time & Duration Group (Compact, one line with labels below) */}
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center justify-between">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* DEPARTURE TIME + LABEL */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex flex-col items-start min-w-0 pr-1 text-left">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-xl tabular-nums text-black font-semibold">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {bus.departureTime}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* New label style */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-[10px] text-gray-500 mt-1 uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Departure
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* DURATION (CENTERED) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex flex-col items-center flex-1 mx-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <span className="text-[10px] text-gray-500">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {calculateDuration(bus.departureTime, bus.arrivalTime)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="h-[1px] w-full bg-gray-300 rounded-full my-1" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-[10px] text-gray-500 uppercase">Duration</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* ARRIVAL TIME + LABEL */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex flex-col items-end min-w-0 pl-1 text-right">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-xl tabular-nums text-gray-500 font-medium">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {bus.arrivalTime}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* New label style */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-[10px] text-gray-500 mt-1 uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Arrival
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  {/* --- Price and Countdown (Bottom Action Strip) --- */}
Â  Â  Â  Â  Â  Â  Â  Â  <hr className="my-3 border-gray-100" />
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center justify-between mt-3">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Booking Deadline Timer (LEFT SIDE) - Non-Bold, Black Text */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <div className="flex-1 min-w-0">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â {timerProps && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <span
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â className="shimmer-effect px-2 py-0.5 rounded-full text-xs inline-block relative"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â style={{ color: "#1F2937" }} // Gray 900 (Black)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <BookingDeadlineTimer {...timerProps} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Price Block (RIGHT SIDE - Black, smaller font) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex-shrink-0 leading-tight flex flex-col items-end">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â {hasStrike && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-[10px] text-gray-400 line-through">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Rs. {bus.originalPrice}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-baseline">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-sm text-gray-600 mr-0.5 align-bottom">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Rs.
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Price is text-xl and only font-semibold (not extra bold) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="text-xl tabular-nums text-black font-semibold"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {displayPrice}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  {/* END: Card Content */}
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  );
Â  Â  Â  Â  })}
Â  Â  Â  </motion.div>
Â  Â  );
Â  };
Â  // --------------------------------------------------------------------------------------
Â  // END RENDER CARDS
Â  // --------------------------------------------------------------------------------------

Â  return (
Â  Â  <div className="flex flex-col min-h-screen bg-[#F0F2F5]">
Â  Â  Â  Â {/* ðŸš¨ INJECTING SHIMMER STYLES */}
Â  Â  Â  <style>{shimmerStyles}</style>

Â  Â  Â  {/* Header pill - Fixed at top */}
Â  Â  Â  <div className="sticky top-0 z-10 bg-white px-4 pt-2 pb-2 shadow-sm">
Â  Â  Â  Â  <div className="flex items-center">
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={() => nav(-1)}
Â  Â  Â  Â  Â  Â  className="p-2 rounded-full hover:bg-gray-100 active:bg-gray-200 mr-2 flex-shrink-0"
Â  Â  Â  Â  Â  Â  aria-label="Go back"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <FaChevronLeft className="text-lg" />
Â  Â  Â  Â  Â  </button>

Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={() => setMobileSearchOpen(true)}
Â  Â  Â  Â  Â  Â  className="flex-1 flex items-center justify-between px-3 py-1.5 rounded-2xl bg-gray-100 mr-2"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <div className="flex flex-col text-left leading-tight">
Â  Â  Â  Â  Â  Â  Â  <span className="text-[13px] font-semibold text-gray-900">
Â  Â  Â  Â  Â  Â  Â  Â  {from && to ? `${from} â†’ ${to}` : "Search route"}
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  <span className="text-[11px] text-gray-600">
Â  Â  Â  Â  Â  Â  Â  Â  {searchDate ? getReadableDate(searchDate) : "Select Date"}
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <FaPen className="text-gray-700 text-sm flex-shrink-0 ml-2" />
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â Â 
Â  Â  Â  Â  Â  {/* Quick Date Change Button */}
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={() => setCalOpen(true)}
Â  Â  Â  Â  Â  Â  className="p-1.5 rounded-full bg-gray-100 hover:bg-gray-200 active:bg-gray-300 flex-shrink-0"
Â  Â  Â  Â  Â  Â  aria-label="Change date"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {/* The calendar icon or a small date representation could go here */}
Â  Â  Â  Â  Â  Â  <FaClock className="text-gray-700 text-base" />Â 
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â Â 

Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  ref={mobileDateInputRef}
Â  Â  Â  Â  Â  Â  type="date"
Â  Â  Â  Â  Â  Â  value={searchDate}
Â  Â  Â  Â  Â  Â  min={todayStr}
Â  Â  Â  Â  Â  Â  onChange={onNativeDateChange}
Â  Â  Â  Â  Â  Â  className="absolute opacity-0 pointer-events-none"
Â  Â  Â  Â  Â  Â  aria-hidden="true"
Â  Â  Â  Â  Â  Â  tabIndex={-1}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  Â Â 
Â  Â  Â  {/* Filter/Chip Section */}
Â  Â  Â  <div className="bg-white sticky top-[60px] z-10 py-2 border-b border-gray-200 shadow-xs">Â 
Â  Â  Â  Â  <div className="max-w-7xl mx-auto px-4">
Â  Â  Â  Â  Â  Â  <SpecialNoticesSection />

Â  Â  Â  Â  Â  Â  <div className="flex gap-2 overflow-x-auto hide-scrollbar pt-1 pb-1">
Â  Â  Â  Â  Â  Â  Â Â 
Â  Â  Â  Â  Â  Â  Â  {/* 1. Filter/Sort Button */}
Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setIsFilterOpen(true)}
Â  Â  Â  Â  Â  Â  Â  Â  className="flex items-center gap-1.5 h-8 px-2.5 border border-gray-200 rounded-xl text-[12.5px] leading-none font-medium bg-white whitespace-nowrap flex-shrink-0 shadow-sm"
Â  Â  Â  Â  Â  Â  Â  Â  aria-label="Open Filter & Sort"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <FaSlidersH className="text-[14px]" />
Â  Â  Â  Â  Â  Â  Â  Â  {"Filter \u00A0&\u00A0 Sort"}
Â  Â  Â  Â  Â  Â  Â  Â  {activeFilterCount > 0 && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="ml-0.5 text-[11px] font-semibold text-white bg-red-500 rounded-full w-4 h-4 flex items-center justify-center">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {activeFilterCount}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  </button>

Â  Â  Â  Â  Â  Â  Â  {/* 2. Time Slot Chips */}
Â  Â  Â  Â  Â  Â  Â  {Object.keys(TIME_SLOTS).map((slot) => {
Â  Â  Â  Â  Â  Â  Â  Â  const Icon = slotIcon(slot);
Â  Â  Â  Â  Â  Â  Â  Â  const active = !!filters.timeSlots[slot];
Â  Â  Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={slot}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  setFilters((prev) => ({
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ...prev,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  timeSlots: { ...prev.timeSlots, [slot]: !prev.timeSlots[slot] },
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }))
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`flex items-center gap-1.5 h-8 px-3 rounded-xl text-[12.5px] leading-none font-medium whitespace-nowrap border flex-shrink-0 transition duration-150 ${
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  active
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? "bg-blue-600 text-white border-blue-600"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : "bg-white text-gray-800 border-gray-200 hover:bg-gray-50"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  aria-pressed={active}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Icon className="text-[16px]" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {slot}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  Â  Â  })}

Â  Â  Â  Â  Â  Â  Â  {/* 3. AC/Non-AC Chips */}
Â  Â  Â  Â  Â  Â  Â  {["AC", "Non-AC"].map((type) => {
Â  Â  Â  Â  Â  Â  Â  Â  const active = filters.type === type;
Â  Â  Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={type}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  setFilters((prev) => ({
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ...prev,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type: prev.type === type ? "" : type, // Toggle logic
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }))
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`h-8 px-3 rounded-xl text-[12.5px] leading-none font-medium whitespace-nowrap border flex-shrink-0 transition duration-150 ${
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  active
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? "bg-blue-600 text-white border-blue-600"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : "bg-white text-gray-800 border-gray-200 hover:bg-gray-50"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  aria-pressed={active}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {type}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  Â  Â  })}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  Â  {/* --- End of Sticky Filter/Chip Section --- */}


Â  Â  Â  {/* Main Bus List Content */}
Â  Â  Â  <div className="flex-1 w-full pb-6 pt-3">
Â  Â  Â  Â  <div className="max-w-7xl mx-auto px-4">
Â  Â  Â  Â  Â  <AnimatePresence>{renderCards()}</AnimatePresence>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  Â  {/* --- End of Main Content --- */}


Â  Â  Â  {/* Filter Panel (Left Side Sheet) */}
Â  Â  Â  <AnimatePresence>
Â  Â  Â  Â  {isFilterOpen && (
Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  {/* Backdrop */}
Â  Â  Â  Â  Â  Â  <motion.button
Â  Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  Â  aria-label="Close filters"
Â  Â  Â  Â  Â  Â  Â  onClick={() => setIsFilterOpen(false)}
Â  Â  Â  Â  Â  Â  Â  className="fixed inset-0 bg-black/40 z-50"
Â  Â  Â  Â  Â  Â  Â  initial={{ opacity: 0 }}
Â  Â  Â  Â  Â  Â  Â  animate={{ opacity: 1 }}
Â  Â  Â  Â  Â  Â  Â  exit={{ opacity: 0 }}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  {/* Panel */}
Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  className="fixed inset-y-0 left-0 w-[88%] max-w-sm bg-white z-50 overflow-y-auto rounded-r-2xl shadow-xl"
Â  Â  Â  Â  Â  Â  Â  initial={{ x: "-100%" }}
Â  Â  Â  Â  Â  Â  Â  animate={{ x: 0 }}
Â  Â  Â  Â  Â  Â  Â  exit={{ x: "-100%" }}
Â  Â  Â  Â  Â  Â  Â  transition={{ type: "spring", stiffness: 300, damping: 30 }}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {/* Pass necessary props to FilterPanel */}
Â  Â  Â  Â  Â  Â  Â  <FilterPanelÂ 
Â  Â  Â  Â  Â  Â  Â  Â  isMobileÂ 
Â  Â  Â  Â  Â  Â  Â  Â  sortBy={sortBy}Â 
Â  Â  Â  Â  Â  Â  Â  Â  setSortBy={setSortBy}Â 
Â  Â  Â  Â  Â  Â  Â  Â  filters={filters}
Â  Â  Â  Â  Â  Â  Â  Â  setFilters={setFilters}
Â  Â  Â  Â  Â  Â  Â  Â  onClose={() => setIsFilterOpen(false)}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  )}
Â  Â  Â  </AnimatePresence>

Â  Â  Â  {/* Other Sheets/Modals */}
Â  Â  Â  <MobileBottomSheet />
Â  Â  Â  <MobileSearchSheet />
Â  Â  Â  <MobileCityPicker
Â  Â  Â  Â  open={mobilePickerOpen}
Â  Â  Â  Â  mode={mobilePickerMode}
Â  Â  Â  Â  options={mobilePickerMode === "from" ? fromOptions : toOptions}
Â  Â  Â  Â  recent={recent}
Â  Â  Â  Â  onPick={handleMobilePick}
Â  Â  Â  Â  onClose={() => setMobilePickerOpen(false)}
Â  Â  Â  />
Â  Â  Â  <MobileCalendarSheet
Â  Â  Â  Â  open={calOpen}
Â  Â  Â  Â  value={searchDate}
Â  Â  Â  Â  minDateString={todayStr}
Â  Â  Â  Â  onPick={(d) => {
Â  Â  Â  Â  Â  setSearchDate(d);
Â  Â  Â  Â  Â  updateSearchWithDate(d); // Update URL/trigger new search
Â  Â  Â  Â  Â  setCalOpen(false);
Â  Â  Â  Â  }}
Â  Â  Â  Â  onClose={() => setCalOpen(false)}
Â  Â  Â  />
Â  Â  </div>
Â  );
}
