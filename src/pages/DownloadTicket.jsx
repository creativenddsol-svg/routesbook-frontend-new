import React, { useRef } from "react";

import { useLocation, useNavigate } from "react-router-dom";

import { QRCodeCanvas } from "qrcode.react";

import jsPDF from "jspdf";

import html2canvas from "html2canvas";

import BookingSteps from "../components/BookingSteps";



const DownloadTicket = () => {

Â  const { state } = useLocation();

Â  const ticketRef = useRef();

Â  const navigate = useNavigate();



Â  const bookingDetails = state?.bookingDetails;



Â  // Handle missing booking details

Â  if (!bookingDetails) {

Â  Â  return (

Â  Â  Â  <div className="text-center p-6">

Â  Â  Â  Â  <h1 className="text-xl font-bold text-red-600">Error</h1>

Â  Â  Â  Â  <p className="text-gray-700 mt-2">No ticket data found.</p>

Â  Â  Â  Â  <button

Â  Â  Â  Â  Â  onClick={() => navigate("/")}

Â  Â  Â  Â  Â  className="mt-4 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"

Â  Â  Â  Â  >

Â  Â  Â  Â  Â  Go to Home

Â  Â  Â  Â  </button>

Â  Â  Â  </div>

Â  Â  );

Â  }



Â  // âœ… Safe destructuring with defaults to prevent crashes

Â  const {

Â  Â  bus = {},

Â  Â  passenger = {}, // booking owner (contact)

Â  Â  passengers = [], // per-seat passengers [{ seat, name, age, gender }]

Â  Â  date = "",

Â  Â  selectedSeats = [],

Â  Â  priceDetails = {},

Â  Â  boardingPoint = {},

Â  Â  droppingPoint = {},

Â  Â  departureTime = "",

Â  Â  bookingId = "",

Â  } = bookingDetails;



Â  const totalPrice = priceDetails?.totalPrice || 0;



Â  const handleDownloadPDF = async () => {

Â  Â  const element = ticketRef.current;

Â  Â  if (!element) return;



Â  Â  const canvas = await html2canvas(element, { scale: 2 });

Â  Â  const imgData = canvas.toDataURL("image/png");



Â  Â  const pdf = new jsPDF("p", "mm", "a4");

Â  Â  const pdfWidth = pdf.internal.pageSize.getWidth();

Â  Â  const pdfHeight = (canvas.height * pdfWidth) / canvas.width;



Â  Â  const pageHeight = pdf.internal.pageSize.getHeight();

Â  Â  let finalHeight = pdfHeight;



Â  Â  if (pdfHeight > pageHeight - 20) {

Â  Â  Â  finalHeight = pageHeight - 20;

Â  Â  }



Â  Â  pdf.addImage(imgData, "PNG", 10, 10, pdfWidth - 20, finalHeight);

Â  Â  pdf.save(

Â  Â  Â  `ticket-${(passenger.name || "guest").replace(/\s/g, "_")}-${date}.pdf`

Â  Â  );

Â  };



Â  // Compact QR text: includes booking id (if present), route, date/time, seats, and the first passenger names

Â  const firstNames = passengers

Â  Â  .map((p) => p.name)

Â  Â  .filter(Boolean)

Â  Â  .slice(0, 3)

Â  Â  .join(", ");

Â  const qrText = `

Â  Â  Ticket

Â  Â  Booking ID: ${bookingId || "N/A"}

Â  Â  Owner: ${passenger.name || "N/A"}

Â  Â  Route: ${bus.from || "N/A"} â†’ ${bus.to || "N/A"}

Â  Â  Date: ${date} at ${departureTime}

Â  Â  Seats: ${selectedSeats.join(", ")}

Â  Â  Passengers: ${firstNames || "N/A"}${passengers.length > 3 ? "â€¦" : ""}

Â  `.trim();



Â  return (

Â  Â  <div className="p-4 sm:p-6 max-w-7xl mx-auto bg-gray-50 min-h-screen">

Â  Â  Â  <BookingSteps currentStep={5} />



Â  Â  Â  <div className="max-w-3xl mx-auto mt-6">

Â  Â  Â  Â  <div

Â  Â  Â  Â  Â  ref={ticketRef}

Â  Â  Â  Â  Â  className="bg-white border-2 border-dashed border-gray-300 shadow-sm p-6 sm:p-8 rounded-lg"

Â  Â  Â  Â  >

Â  Â  Â  Â  Â  {/* Header */}

Â  Â  Â  Â  Â  <div className="text-center border-b-2 border-dashed pb-4 mb-4">

Â  Â  Â  Â  Â  Â  <h2 className="text-3xl font-bold text-gray-800">Your Ticket</h2>

Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500">

Â  Â  Â  Â  Â  Â  Â  Thank you for booking with us!

Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  {bookingId && (

Â  Â  Â  Â  Â  Â  Â  <p className="text-xs text-gray-400 mt-1">

Â  Â  Â  Â  Â  Â  Â  Â  Booking ID: {bookingId}

Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  </div>



Â  Â  Â  Â  Â  {/* Main grid */}

Â  Â  Â  Â  Â  <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-base">

Â  Â  Â  Â  Â  Â  {/* Left 2/3 */}

Â  Â  Â  Â  Â  Â  <div className="md:col-span-2 space-y-4">

Â  Â  Â  Â  Â  Â  Â  {/* Contact / Owner */}

Â  Â  Â  Â  Â  Â  Â  <div>

Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="font-bold text-gray-700">

Â  Â  Â  Â  Â  Â  Â  Â  Â  Contact (Booking Owner)

Â  Â  Â  Â  Â  Â  Â  Â  </h3>

Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-800">{passenger.name || "N/A"}</p>

Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-600">{passenger.mobile || "N/A"}</p>

Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-600">{passenger.email || "N/A"}</p>

Â  Â  Â  Â  Â  Â  Â  Â  {passenger.nic && (

Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-600">{passenger.nic}</p>

Â  Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  </div>



Â  Â  Â  Â  Â  Â  Â  {/* Per-seat passengers */}

Â  Â  Â  Â  Â  Â  Â  <div>

Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="font-bold text-gray-700">

Â  Â  Â  Â  Â  Â  Â  Â  Â  Passenger Details (Per Seat)

Â  Â  Â  Â  Â  Â  Â  Â  </h3>

Â  Â  Â  Â  Â  Â  Â  Â  {passengers.length > 0 ? (

Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="mt-2 space-y-2">

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {passengers.map((p) => (

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={p.seat}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="flex flex-wrap items-center gap-2 bg-gray-50 border rounded-lg px-3 py-2"

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="bg-blue-100 text-blue-800 font-bold px-3 py-1 rounded-full">

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Seat {p.seat}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong>Name:</strong> {p.name || "-"}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong>Gender:</strong>{" "}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {p.gender === "F" ? "Female" : "Male"}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong>Age:</strong>{" "}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {p.age === "" || p.age == null ? "-" : p.age}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}

Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  ) : (

Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-500">

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  No passenger details provided.

Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  </div>



Â  Â  Â  Â  Â  Â  Â  {/* Journey */}

Â  Â  Â  Â  Â  Â  Â  <div>

Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="font-bold text-gray-700">Journey Details</h3>

Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-800">

Â  Â  Â  Â  Â  Â  Â  Â  Â  {bus.name || "N/A"} {bus.busType ? `(${bus.busType})` : ""}

Â  Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  Â  Â  <p>

Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong>Route:</strong> {bus.from || "N/A"} â†’{" "}

Â  Â  Â  Â  Â  Â  Â  Â  Â  {bus.to || "N/A"}

Â  Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  Â  Â  <p>

Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong>Date:</strong> {date || "N/A"}

Â  Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  Â  Â  <p>

Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong>Departure Time:</strong> {departureTime || "N/A"}

Â  Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  Â  </div>



Â  Â  Â  Â  Â  Â  Â  {/* Boarding / Dropping */}

Â  Â  Â  Â  Â  Â  Â  <div>

Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="font-bold text-gray-700">Boarding & Dropping</h3>

Â  Â  Â  Â  Â  Â  Â  Â  <p>

Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong>From:</strong> {boardingPoint.point || "N/A"} (

Â  Â  Â  Â  Â  Â  Â  Â  Â  {boardingPoint.time || "N/A"})

Â  Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  Â  Â  <p>

Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong>To:</strong> {droppingPoint.point || "N/A"} (

Â  Â  Â  Â  Â  Â  Â  Â  Â  {droppingPoint.time || "N/A"})

Â  Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  </div>



Â  Â  Â  Â  Â  Â  {/* Right 1/3 */}

Â  Â  Â  Â  Â  Â  <div className="flex flex-col items-center justify-between text-center">

Â  Â  Â  Â  Â  Â  Â  <div>

Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="font-bold text-gray-700">Scan QR Code</h3>

Â  Â  Â  Â  Â  Â  Â  Â  <div className="p-2 bg-white border rounded-lg mt-2">

Â  Â  Â  Â  Â  Â  Â  Â  Â  <QRCodeCanvas value={qrText} size={128} />

Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  </div>



Â  Â  Â  Â  Â  Â  Â  <div>

Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="font-bold text-gray-700">Selected Seats</h3>

Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-2xl font-bold text-pink-600">

Â  Â  Â  Â  Â  Â  Â  Â  Â  {selectedSeats.length > 0 ? selectedSeats.join(", ") : "None"}

Â  Â  Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  </div>



Â  Â  Â  Â  Â  {/* Total */}

Â  Â  Â  Â  Â  <div className="text-center border-t-2 border-dashed pt-4 mt-6">

Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500">Total Fare</p>

Â  Â  Â  Â  Â  Â  <p className="text-2xl font-bold text-green-700">

Â  Â  Â  Â  Â  Â  Â  Rs. {Number(totalPrice).toFixed(2)}

Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  </div>



Â  Â  Â  Â  {/* Download button */}

Â  Â  Â  Â  <div className="mt-6">

Â  Â  Â  Â  Â  <button

Â  Â  Â  Â  Â  Â  onClick={handleDownloadPDF}

Â  Â  Â  Â  Â  Â  className="w-full py-3 rounded-lg text-white font-bold text-lg transition-all duration-300 tracking-wide shadow-lg bg-gradient-to-r from-green-500 to-teal-500 hover:scale-105 hover:shadow-xl"

Â  Â  Â  Â  Â  >

Â  Â  Â  Â  Â  Â  ðŸ“„ Download Ticket (PDF)

Â  Â  Â  Â  Â  </button>

Â  Â  Â  Â  </div>

Â  Â  Â  </div>

Â  Â  </div>

Â  );

};



export default DownloadTicket;
